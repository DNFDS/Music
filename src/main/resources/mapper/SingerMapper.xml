<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.SingerMapper" >
  <resultMap id="SingerResultMap" type="com.example.demo.entity.Singer" >
    <id column="SINGERID" property="singerid" jdbcType="VARCHAR" />
    <result column="SINGERNAME" property="singername" jdbcType="VARCHAR" />
    <result column="SINGERIMAGE" property="singerimage" jdbcType="VARCHAR" />
    <result column="SINGERSEX" property="singersex" jdbcType="VARCHAR" />
    <result column="REGION" property="region" jdbcType="VARCHAR" />
    <result column="INTRODUCTION" property="introduction" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    SINGERID, SINGERNAME, SINGERIMAGE, SINGERSEX, REGION, INTRODUCTION
  </sql>
  <select id="selectByExample" resultMap="SingerResultMap" parameterType="com.example.demo.entity.Example.SingerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SINGER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="SingerResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from SINGER
    where SINGERID = #{singerid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from SINGER
    where SINGERID = #{singerid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.Example.SingerExample" >
    delete from SINGER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Singer" >
    insert into SINGER (SINGERID, SINGERNAME, SINGERIMAGE, 
      SINGERSEX, REGION, INTRODUCTION
      )
    values (#{singerid,jdbcType=VARCHAR}, #{singername,jdbcType=VARCHAR}, #{singerimage,jdbcType=VARCHAR}, 
      #{singersex,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Singer" >
    insert into SINGER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="singerid != null" >
        SINGERID,
      </if>
      <if test="singername != null" >
        SINGERNAME,
      </if>
      <if test="singerimage != null" >
        SINGERIMAGE,
      </if>
      <if test="singersex != null" >
        SINGERSEX,
      </if>
      <if test="region != null" >
        REGION,
      </if>
      <if test="introduction != null" >
        INTRODUCTION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="singerid != null" >
        #{singerid,jdbcType=VARCHAR},
      </if>
      <if test="singername != null" >
        #{singername,jdbcType=VARCHAR},
      </if>
      <if test="singerimage != null" >
        #{singerimage,jdbcType=VARCHAR},
      </if>
      <if test="singersex != null" >
        #{singersex,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.Example.SingerExample" resultType="java.lang.Integer" >
    select count(*) from SINGER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update SINGER
    <set >
      <if test="record.singerid != null" >
        SINGERID = #{record.singerid,jdbcType=VARCHAR},
      </if>
      <if test="record.singername != null" >
        SINGERNAME = #{record.singername,jdbcType=VARCHAR},
      </if>
      <if test="record.singerimage != null" >
        SINGERIMAGE = #{record.singerimage,jdbcType=VARCHAR},
      </if>
      <if test="record.singersex != null" >
        SINGERSEX = #{record.singersex,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null" >
        REGION = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.introduction != null" >
        INTRODUCTION = #{record.introduction,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update SINGER
    set SINGERID = #{record.singerid,jdbcType=VARCHAR},
      SINGERNAME = #{record.singername,jdbcType=VARCHAR},
      SINGERIMAGE = #{record.singerimage,jdbcType=VARCHAR},
      SINGERSEX = #{record.singersex,jdbcType=VARCHAR},
      REGION = #{record.region,jdbcType=VARCHAR},
      INTRODUCTION = #{record.introduction,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Singer" >
    update SINGER
    <set >
      <if test="singername != null" >
        SINGERNAME = #{singername,jdbcType=VARCHAR},
      </if>
      <if test="singerimage != null" >
        SINGERIMAGE = #{singerimage,jdbcType=VARCHAR},
      </if>
      <if test="singersex != null" >
        SINGERSEX = #{singersex,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        REGION = #{region,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        INTRODUCTION = #{introduction,jdbcType=VARCHAR},
      </if>
    </set>
    where SINGERID = #{singerid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Singer" >
    update SINGER
    set SINGERNAME = #{singername,jdbcType=VARCHAR},
      SINGERIMAGE = #{singerimage,jdbcType=VARCHAR},
      SINGERSEX = #{singersex,jdbcType=VARCHAR},
      REGION = #{region,jdbcType=VARCHAR},
      INTRODUCTION = #{introduction,jdbcType=VARCHAR}
    where SINGERID = #{singerid,jdbcType=VARCHAR}
  </update>
</mapper>