<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.UserMapper" >
  <resultMap id="UserResultMap" type="com.example.demo.entity.User" >
    <id column="USERID" property="userid" jdbcType="VARCHAR" />
    <result column="USERNAME" property="username" jdbcType="VARCHAR" />
    <result column="USERPASSWORD" property="userpassword" jdbcType="VARCHAR" />
    <result column="USERIMAGE" property="userimage" jdbcType="VARCHAR" />
    <result column="USERSEX" property="usersex" jdbcType="VARCHAR" />
    <result column="ISVIP" property="isvip" jdbcType="CHAR" />
    <result column="USERBALANCE" property="userbalance" jdbcType="NUMERIC" />
    <result column="ISBANNED" property="isbanned" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    USERID, USERNAME, USERPASSWORD, USERIMAGE, USERSEX, ISVIP, USERBALANCE, ISBANNED
  </sql>
  <select id="selectByExample" resultMap="UserResultMap" parameterType="com.example.demo.entity.Example.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from MUSER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="UserResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from MUSER
    where USERID = #{userid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from MUSER
    where USERID = #{userid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.Example.UserExample" >
    delete from MUSER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.User" >
    insert into MUSER (USERID, USERNAME, USERPASSWORD, 
      USERIMAGE, USERSEX, ISVIP, 
      USERBALANCE, ISBANNED)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{userpassword,jdbcType=VARCHAR}, 
      #{userimage,jdbcType=VARCHAR}, #{usersex,jdbcType=VARCHAR}, #{isvip,jdbcType=CHAR}, 
      #{userbalance,jdbcType=NUMERIC}, #{isbanned,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.User" >
    insert into MUSER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        USERID,
      </if>
      <if test="username != null" >
        USERNAME,
      </if>
      <if test="userpassword != null" >
        USERPASSWORD,
      </if>
      <if test="userimage != null" >
        USERIMAGE,
      </if>
      <if test="usersex != null" >
        USERSEX,
      </if>
      <if test="isvip != null" >
        ISVIP,
      </if>
      <if test="userbalance != null" >
        USERBALANCE,
      </if>
      <if test="isbanned != null" >
        ISBANNED,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="userimage != null" >
        #{userimage,jdbcType=VARCHAR},
      </if>
      <if test="usersex != null" >
        #{usersex,jdbcType=VARCHAR},
      </if>
      <if test="isvip != null" >
        #{isvip,jdbcType=CHAR},
      </if>
      <if test="userbalance != null" >
        #{userbalance,jdbcType=NUMERIC},
      </if>
      <if test="isbanned != null" >
        #{isbanned,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.Example.UserExample" resultType="java.lang.Integer" >
    select count(*) from MUSER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update MUSER
    <set >
      <if test="record.userid != null" >
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.userpassword != null" >
        USERPASSWORD = #{record.userpassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userimage != null" >
        USERIMAGE = #{record.userimage,jdbcType=VARCHAR},
      </if>
      <if test="record.usersex != null" >
        USERSEX = #{record.usersex,jdbcType=VARCHAR},
      </if>
      <if test="record.isvip != null" >
        ISVIP = #{record.isvip,jdbcType=CHAR},
      </if>
      <if test="record.userbalance != null" >
        USERBALANCE = #{record.userbalance,jdbcType=NUMERIC},
      </if>
      <if test="record.isbanned != null" >
        ISBANNED = #{record.isbanned,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update MUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      USERPASSWORD = #{record.userpassword,jdbcType=VARCHAR},
      USERIMAGE = #{record.userimage,jdbcType=VARCHAR},
      USERSEX = #{record.usersex,jdbcType=VARCHAR},
      ISVIP = #{record.isvip,jdbcType=CHAR},
      USERBALANCE = #{record.userbalance,jdbcType=NUMERIC},
      ISBANNED = #{record.isbanned,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.User" >
    update MUSER
    <set >
      <if test="username != null" >
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        USERPASSWORD = #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="userimage != null" >
        USERIMAGE = #{userimage,jdbcType=VARCHAR},
      </if>
      <if test="usersex != null" >
        USERSEX = #{usersex,jdbcType=VARCHAR},
      </if>
      <if test="isvip != null" >
        ISVIP = #{isvip,jdbcType=CHAR},
      </if>
      <if test="userbalance != null" >
        USERBALANCE = #{userbalance,jdbcType=NUMERIC},
      </if>
      <if test="isbanned != null" >
        ISBANNED = #{isbanned,jdbcType=CHAR},
      </if>
    </set>
    where USERID = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.User" >
    update MUSER
    set USERNAME = #{username,jdbcType=VARCHAR},
      USERPASSWORD = #{userpassword,jdbcType=VARCHAR},
      USERIMAGE = #{userimage,jdbcType=VARCHAR},
      USERSEX = #{usersex,jdbcType=VARCHAR},
      ISVIP = #{isvip,jdbcType=CHAR},
      USERBALANCE = #{userbalance,jdbcType=NUMERIC},
      ISBANNED = #{isbanned,jdbcType=CHAR}
    where USERID = #{userid,jdbcType=VARCHAR}
  </update>
  <parameterMap type="java.util.Map" id="addUserMap">
    <parameter property="username" mode="IN" jdbcType="VARCHAR"/>
    <parameter property="userpassword" mode="IN" jdbcType="VARCHAR"/>
    <parameter property="userimage" mode="IN" jdbcType="VARCHAR"/>
    <parameter property="usersex" mode="IN" jdbcType="CHAR"/>
    <parameter property="result" mode="OUT" jdbcType="VARCHAR"/>
  </parameterMap>
  <insert id="addUser" parameterMap="addUserMap" statementType="CALLABLE">
    call USER_PKG.ADD_USER(?,?,?,?,?)
  </insert>

  <select id="isUserExit" parameterType="java.util.Map" resultType="java.util.Map" statementType="CALLABLE">
    call USER_PKG.IS_USER_EXIST(#{userid,jdbcType=VARCHAR,mode=IN},#{userpassword,jdbcType=VARCHAR,mode=IN},#{result,jdbcType=VARCHAR,mode=OUT})
  </select>

  <select id="getUserById" parameterType="java.util.HashMap" statementType="CALLABLE">
    call USER_PKG.GET_USER(#{userid,mode=IN,jdbcType=VARCHAR},#{result,mode=OUT,jdbcType=CURSOR,javaType=ResultSet,resultMap=UserResultMap})
  </select>
</mapper>