<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.GetFalseMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.GetFalse" >
    <id column="USERID" property="userid" jdbcType="VARCHAR" />
    <id column="SONGID" property="songid" jdbcType="VARCHAR" />
    <id column="GETFALSETIME" property="getfalsetime" jdbcType="TIMESTAMP" />
    <result column="FALSETEXT" property="falsetext" jdbcType="VARCHAR" />
    <result column="ISSOLVED" property="issolved" jdbcType="CHAR" />
    <result column="ADMINID" property="adminid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    USERID, SONGID, GETFALSETIME, FALSETEXT, ISSOLVED, ADMINID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.entity.Example.GetFalseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from GETFALSE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.example.demo.entity.GetFalseKey" >
    select 
    <include refid="Base_Column_List" />
    from GETFALSE
    where USERID = #{userid,jdbcType=VARCHAR}
      and SONGID = #{songid,jdbcType=VARCHAR}
      and GETFALSETIME = #{getfalsetime,jdbcType=TIMESTAMP}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.demo.entity.GetFalseKey" >
    delete from GETFALSE
    where USERID = #{userid,jdbcType=VARCHAR}
      and SONGID = #{songid,jdbcType=VARCHAR}
      and GETFALSETIME = #{getfalsetime,jdbcType=TIMESTAMP}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.Example.GetFalseExample" >
    delete from GETFALSE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.GetFalse" >
    insert into GETFALSE (USERID, SONGID, GETFALSETIME, 
      FALSETEXT, ISSOLVED, ADMINID
      )
    values (#{userid,jdbcType=VARCHAR}, #{songid,jdbcType=VARCHAR}, #{getfalsetime,jdbcType=TIMESTAMP}, 
      #{falsetext,jdbcType=VARCHAR}, #{issolved,jdbcType=CHAR}, #{adminid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.GetFalse" >
    insert into GETFALSE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        USERID,
      </if>
      <if test="songid != null" >
        SONGID,
      </if>
      <if test="getfalsetime != null" >
        GETFALSETIME,
      </if>
      <if test="falsetext != null" >
        FALSETEXT,
      </if>
      <if test="issolved != null" >
        ISSOLVED,
      </if>
      <if test="adminid != null" >
        ADMINID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="songid != null" >
        #{songid,jdbcType=VARCHAR},
      </if>
      <if test="getfalsetime != null" >
        #{getfalsetime,jdbcType=TIMESTAMP},
      </if>
      <if test="falsetext != null" >
        #{falsetext,jdbcType=VARCHAR},
      </if>
      <if test="issolved != null" >
        #{issolved,jdbcType=CHAR},
      </if>
      <if test="adminid != null" >
        #{adminid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.Example.GetFalseExample" resultType="java.lang.Integer" >
    select count(*) from GETFALSE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update GETFALSE
    <set >
      <if test="record.userid != null" >
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.songid != null" >
        SONGID = #{record.songid,jdbcType=VARCHAR},
      </if>
      <if test="record.getfalsetime != null" >
        GETFALSETIME = #{record.getfalsetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.falsetext != null" >
        FALSETEXT = #{record.falsetext,jdbcType=VARCHAR},
      </if>
      <if test="record.issolved != null" >
        ISSOLVED = #{record.issolved,jdbcType=CHAR},
      </if>
      <if test="record.adminid != null" >
        ADMINID = #{record.adminid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update GETFALSE
    set USERID = #{record.userid,jdbcType=VARCHAR},
      SONGID = #{record.songid,jdbcType=VARCHAR},
      GETFALSETIME = #{record.getfalsetime,jdbcType=TIMESTAMP},
      FALSETEXT = #{record.falsetext,jdbcType=VARCHAR},
      ISSOLVED = #{record.issolved,jdbcType=CHAR},
      ADMINID = #{record.adminid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.GetFalse" >
    update GETFALSE
    <set >
      <if test="falsetext != null" >
        FALSETEXT = #{falsetext,jdbcType=VARCHAR},
      </if>
      <if test="issolved != null" >
        ISSOLVED = #{issolved,jdbcType=CHAR},
      </if>
      <if test="adminid != null" >
        ADMINID = #{adminid,jdbcType=VARCHAR},
      </if>
    </set>
    where USERID = #{userid,jdbcType=VARCHAR}
      and SONGID = #{songid,jdbcType=VARCHAR}
      and GETFALSETIME = #{getfalsetime,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.GetFalse" >
    update GETFALSE
    set FALSETEXT = #{falsetext,jdbcType=VARCHAR},
      ISSOLVED = #{issolved,jdbcType=CHAR},
      ADMINID = #{adminid,jdbcType=VARCHAR}
    where USERID = #{userid,jdbcType=VARCHAR}
      and SONGID = #{songid,jdbcType=VARCHAR}
      and GETFALSETIME = #{getfalsetime,jdbcType=TIMESTAMP}
  </update>
  <select id="addFalse" statementType="CALLABLE">
    call USER_PKG.add_false(#{userid,mode=IN,jdbcType=VARCHAR},#{songid,mode=IN,jdbcType=VARCHAR},#{falsetext,mode=IN,jdbcType=VARCHAR},#{succ,mode=OUT,jdbcType=VARCHAR})
  </select>
  <select id="deleteFalse" statementType="CALLABLE">
    call ADMIN_PKG.delete_false(#{userid,mode=IN,jdbcType=VARCHAR},#{songid,mode=IN,jdbcType=VARCHAR},#{falsetime,mode=IN,jdbcType=DATE},#{succ,mode=OUT,jdbcType=VARCHAR})
  </select>
  <select id="handleFalse" statementType="CALLABLE">
    call ADMIN_PKG.handle_false(#{userid,mode=IN,jdbcType=VARCHAR},#{songid,mode=IN,jdbcType=VARCHAR},#{adminid,mode=IN,jdbcType=VARCHAR},#{falsetime,mode=IN,jdbcType=DATE},#{succ,mode=OUT,jdbcType=VARCHAR})
  </select>
  <select id="getAllFalse" parameterType="java.util.HashMap" statementType="CALLABLE">
    call ADMIN_PKG.get_all_false(#{falses,mode=OUT,jdbcType=CURSOR,javaType=ResultSet,resultMap=GetFalseResultMap})
  </select>
  <select id="getFalse" parameterType="java.util.HashMap" statementType="CALLABLE">
    call ADMIN_PKG.get_false(#{songid,mode=IN,jdbcType=VARCHAR},#{falses,mode=OUT,jdbcType=CURSOR,javaType=ResultSet,resultMap=GetFalseResultMap})
  </select>
</mapper>